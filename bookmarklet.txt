javascript:(function(){"use strict";class WebsiteGraffiti{constructor(){this.openaiApiKey="";this.originalHTML="";this.graffitiWindow=null;this.initializeApiKey()}initializeApiKey(){this.openaiApiKey=prompt("Enter your OpenAI API key:")||"";if(!this.openaiApiKey){alert("API key required to proceed!");return}}async startGraffiti(){try{console.log("ðŸŽ¨ Starting website graffiti...");this.originalHTML=document.documentElement.outerHTML;const effects=await this.generateGraffitiEffects();this.displayGraffitiVersion(effects)}catch(error){console.error("Graffiti error:",error);alert("Failed to create graffiti version: "+((error===null||error===void 0?void 0:error.message)||error))}}async generateGraffitiEffects(){const pageAnalysis=this.analyzePage();const prompt=`You are a street graffiti artist creating subtle but cool digital tags and effects. Make this website look tagged with spray paint and stickers, but keep it readable and not overwhelmingly bright.\n\nPage elements found: ${pageAnalysis.elements.join(", ")}\nColors found: ${pageAnalysis.colors.join(", ")}\n\nCreate 6-8 CSS effects as JSON array with this format:\n[\n  {\n    "selector": "button",\n    "css": "border: 2px solid rgba(255,0,255,0.6) !important; background: linear-gradient(45deg, rgba(255,0,128,0.3), rgba(128,0,255,0.3)) !important; border-radius: 20px !important; box-shadow: 0 0 12px rgba(0,255,255,0.3) !important; animation: melt 4s ease-in-out infinite alternate !important; position: relative !important;",\n    "description": "Subtle melting spray-painted buttons"\n  }\n]\n\nCreate GRAFFITI effects with MODERATE brightness:\n- Use rgba() colors with 0.3-0.7 opacity instead of solid bright colors\n- Paint drips and melting animations (gentle transforms)\n- Spray paint glow effects (subtle box-shadows, not blinding)\n- Graffiti-style text shadows (multiple layers but translucent)\n- Tag borders and outlines (dashed/dotted borders)\n- Glitch animations (rapid but subtle color changes)\n- Sticker effects (colorful borders, background gradients)\n\nInclude these CSS animations in your responses:\n@keyframes melt { 0% { border-radius: 20px; } 50% { border-radius: 0 0 40px 40px; } 100% { border-radius: 20px; } }\n@keyframes glow { 0% { box-shadow: 0 0 5px rgba(255,255,255,0.2); } 50% { box-shadow: 0 0 15px rgba(255,255,255,0.4); } }\n@keyframes glitch { 0% { text-shadow: 1px 0 rgba(255,0,255,0.4); } 50% { text-shadow: -1px 0 rgba(0,255,255,0.4); } }\n@keyframes flicker { 0%, 100% { opacity: 1; } 50% { opacity: 0.7; } }\n\nMake it look like:\n- Street art tags but not neon signs\n- Cool spray paint effects that enhance, don't overwhelm\n- Underground aesthetic but still functional\n- Authentic graffiti colors: hot pink, electric blue, lime green, but with transparency\n\nUse these color ranges with transparency:\n- rgba(255,0,255,0.4-0.7) - Hot pink\n- rgba(0,255,255,0.4-0.7) - Cyan  \n- rgba(255,255,0,0.3-0.6) - Yellow\n- rgba(255,0,128,0.4-0.7) - Deep pink\n- rgba(0,255,0,0.4-0.7) - Lime green\n\nKeep text readable! Focus on borders, backgrounds, and subtle glows rather than bright text colors.\n\nReturn only valid JSON, no other text.`;const response=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.openaiApiKey}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"user",content:prompt}],max_tokens:1e3,temperature:.9})});if(!response.ok){throw new Error(`OpenAI API error: ${response.status}`)}const data=await response.json();const content=data.choices[0].message.content;try{return JSON.parse(content)}catch(parseError){console.warn("Failed to parse AI response, using defaults:",parseError);return this.getDefaultEffects()}}analyzePage(){const elements=new Set;const colors=new Set;const commonSelectors=["button","a","h1","h2","h3","input","div","nav","header"];commonSelectors.forEach((selector=>{if(document.querySelector(selector)){elements.add(selector)}}));const sampleElements=document.querySelectorAll("*");for(let i=0;i<Math.min(20,sampleElements.length);i++){const style=getComputedStyle(sampleElements[i]);if(style.backgroundColor&&style.backgroundColor!=="rgba(0, 0, 0, 0)"){colors.add(style.backgroundColor)}if(style.color&&style.color!=="rgba(0, 0, 0, 0)"){colors.add(style.color)}}return{elements:Array.from(elements),colors:Array.from(colors).slice(0,5)}}getDefaultEffects(){return[{selector:"button",css:"border: 2px solid rgba(255,0,255,0.6) !important; background: linear-gradient(45deg, rgba(255,0,128,0.3), rgba(128,0,255,0.3)) !important; border-radius: 25px !important; box-shadow: 0 0 15px rgba(0,255,255,0.3), inset 0 0 10px rgba(255,255,255,0.1) !important; animation: melt 4s ease-in-out infinite alternate, glow 2s ease-in-out infinite !important; position: relative !important; overflow: hidden !important; font-weight: bold !important; text-shadow: 1px 1px 0 rgba(0,0,0,0.8), 0 0 8px rgba(255,255,255,0.4) !important;",description:"Melting neon spray-painted buttons"},{selector:"a",css:"color: rgba(0,255,65,0.9) !important; text-decoration: none !important; text-shadow: 1px 0 rgba(255,0,255,0.5), -1px 0 rgba(0,255,255,0.5), 0 1px rgba(255,255,0,0.4), 0 0 8px rgba(0,255,65,0.3) !important; animation: glitch 3s linear infinite !important; position: relative !important; font-weight: bold !important; padding: 2px 6px !important; background: rgba(0,0,0,0.2) !important; border-radius: 6px !important;",description:"Glitching graffiti tag links"},{selector:"h1, h2, h3",css:"position: relative !important; color: rgba(255,0,128,0.9) !important; text-shadow: 2px 2px 0 rgba(0,0,0,0.7), 3px 3px 0 rgba(0,255,255,0.4), 4px 4px 0 rgba(255,255,0,0.3), 0 0 12px rgba(255,0,255,0.3) !important; animation: glow 3s ease-in-out infinite alternate !important; background: linear-gradient(90deg, transparent, rgba(255,0,255,0.05), transparent) !important; padding: 8px !important; border-left: 3px solid rgba(0,255,255,0.5) !important; font-weight: 800 !important;",description:"Graffiti bubble letter headers"},{selector:"input, textarea",css:"border: 2px solid rgba(0,255,0,0.6) !important; box-shadow: inset 0 0 10px rgba(255,0,255,0.2), 0 0 12px rgba(0,255,255,0.3) !important; background: linear-gradient(45deg, rgba(0,0,0,0.4), rgba(255,0,255,0.05)) !important; animation: flicker 4s ease-in-out infinite !important; color: rgba(0,255,0,0.9) !important; font-weight: bold !important; border-radius: 12px !important;",description:"Flickering neon input fields"},{selector:"img",css:"filter: hue-rotate(120deg) saturate(1.4) contrast(1.2) !important; border: 2px solid rgba(255,0,255,0.5) !important; box-shadow: 0 0 15px rgba(0,255,255,0.4) !important; position: relative !important; animation: glow 2.5s ease-in-out infinite alternate !important; border-radius: 8px !important;",description:"Color-shifted graffiti images"},{selector:"p",css:"position: relative !important; filter: contrast(1.1) saturate(1.1) !important; text-shadow: 0.5px 0.5px 1px rgba(0,255,255,0.2) !important; background: linear-gradient(90deg, transparent 97%, rgba(255,0,255,0.03) 100%) !important;",description:"Subtly enhanced text"},{selector:"nav, header, footer",css:"position: relative !important; background: linear-gradient(45deg, rgba(255,0,255,0.05), rgba(0,255,255,0.05)) !important; border-top: 2px solid rgba(255,0,255,0.4) !important; border-bottom: 2px solid rgba(0,255,255,0.4) !important; box-shadow: 0 0 10px rgba(255,0,255,0.2) !important; animation: glow 4s ease-in-out infinite alternate !important;",description:"Tagged navigation sections"},{selector:"div:hover, section:hover",css:"box-shadow: 0 0 12px rgba(0,255,255,0.3) !important; border: 1px dashed rgba(255,0,255,0.4) !important; background: linear-gradient(45deg, transparent, rgba(255,0,255,0.02), transparent) !important; transition: all 0.3s ease !important;",description:"Subtle hover graffiti effects"}]}displayGraffitiVersion(effects){this.graffitiWindow=window.open("","_blank","width=1200,height=800");if(!this.graffitiWindow){alert("Please allow popups to see the graffiti version!");return}const graffitiCSS=this.createGraffitiCSS(effects);this.graffitiWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>ðŸŽ¨ GRAFFITIED: ${document.title}</title>\n        <style>\n          /* Original styles preserved */\n          ${this.extractOriginalCSS()}\n          \n          /* Graffiti overlay styles */\n          ${graffitiCSS}\n          \n          /* Global graffiti effects */\n          body {\n            position: relative;\n            overflow-x: hidden;\n            filter: contrast(1.05) saturate(1.1);\n            background: linear-gradient(45deg, \n              rgba(255,0,255,0.01) 0%, \n              transparent 25%, \n              rgba(0,255,255,0.01) 50%, \n              transparent 75%, \n              rgba(255,255,0,0.01) 100%) !important;\n          }\n          \n          body::before {\n            content: "ðŸŽ¨ TAGGED";\n            position: fixed;\n            top: 15px;\n            right: 15px;\n            background: linear-gradient(45deg, rgba(255,0,128,0.8), rgba(128,0,255,0.8));\n            color: white;\n            padding: 6px 12px;\n            border-radius: 20px;\n            font-weight: 700;\n            z-index: 9999;\n            font-family: Arial, sans-serif;\n            font-size: 12px;\n            box-shadow: 0 0 10px rgba(255,0,255,0.4), inset 0 0 5px rgba(255,255,255,0.1);\n            border: 1px solid rgba(0,255,255,0.6);\n            animation: glow 2s ease-in-out infinite alternate, neonPulse 3s ease-in-out infinite;\n            text-shadow: 1px 1px 0 rgba(0,0,0,0.8), 0 0 5px rgba(255,255,255,0.4);\n          }\n          \n          body::after {\n            content: "";\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: \n              radial-gradient(circle at 10% 20%, rgba(255,0,255,0.03) 0%, transparent 40%),\n              radial-gradient(circle at 90% 80%, rgba(0,255,255,0.03) 0%, transparent 40%),\n              radial-gradient(circle at 50% 50%, rgba(255,255,0,0.02) 0%, transparent 60%);\n            pointer-events: none;\n            z-index: -1;\n            animation: flicker 8s ease-in-out infinite;\n          }\n          \n          /* Subtle graffiti elements */\n          *:nth-child(13n)::before {\n            content: "ðŸ’€";\n            position: absolute;\n            top: -3px;\n            right: -3px;\n            font-size: 10px;\n            z-index: 10;\n            color: rgba(255,0,255,0.6);\n            animation: flicker 4s ease-in-out infinite;\n            text-shadow: 0 0 3px rgba(255,0,255,0.4);\n          }\n          \n          *:nth-child(17n)::after {\n            content: "âš¡";\n            position: absolute;\n            bottom: -3px;\n            left: -3px;\n            font-size: 8px;\n            z-index: 10;\n            color: rgba(0,255,255,0.6);\n            animation: glow 3s ease-in-out infinite;\n          }\n        </style>\n      </head>\n      <body>\n        ${document.body.innerHTML}\n        \n        <div style="position: fixed; bottom: 10px; left: 10px; background: rgba(0,0,0,0.8); color: #00ff00; padding: 10px; border-radius: 10px; font-family: monospace; font-size: 12px; z-index: 9999; max-width: 300px;">\n          <strong>Graffiti Effects Applied:</strong><br>\n          ${effects.map((effect=>`â€¢ ${effect.description}`)).join("<br>")}\n        </div>\n      </body>\n      </html>\n    `);this.graffitiWindow.document.close();console.log("ðŸŽ¨ Graffiti version created!")}createGraffitiCSS(effects){const animations=`\n      @keyframes melt {\n        0% { border-radius: 25px; transform: translateY(0); }\n        50% { border-radius: 0 0 50px 50px; transform: translateY(2px); }\n        100% { border-radius: 25px; transform: translateY(0); }\n      }\n      \n      @keyframes glow {\n        0% { box-shadow: 0 0 3px rgba(255,255,255,0.2); }\n        50% { box-shadow: 0 0 12px rgba(255,255,255,0.4), 0 0 18px rgba(255,255,255,0.2); }\n        100% { box-shadow: 0 0 3px rgba(255,255,255,0.2); }\n      }\n      \n      @keyframes glitch {\n        0% { text-shadow: 1px 0 rgba(255,0,255,0.4), -1px 0 rgba(0,255,255,0.4); }\n        25% { text-shadow: -1px 0 rgba(0,255,255,0.4), 1px 0 rgba(255,255,0,0.3); }\n        50% { text-shadow: 1px 0 rgba(255,255,0,0.3), -1px 0 rgba(255,0,128,0.4); }\n        75% { text-shadow: -1px 0 rgba(255,0,128,0.4), 1px 0 rgba(0,255,0,0.3); }\n        100% { text-shadow: 1px 0 rgba(255,0,255,0.4), -1px 0 rgba(0,255,255,0.4); }\n      }\n      \n      @keyframes drip {\n        0% { clip-path: polygon(0 0, 100% 0, 100% 85%, 0 85%); }\n        100% { clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); }\n      }\n      \n      @keyframes flicker {\n        0%, 100% { opacity: 1; filter: brightness(1); }\n        25% { opacity: 0.8; filter: brightness(1.2); }\n        50% { opacity: 0.6; filter: brightness(0.8); }\n        75% { opacity: 0.9; filter: brightness(1.1); }\n      }\n      \n      @keyframes spray {\n        0% { box-shadow: 0 0 6px rgba(255,0,255,0.3); }\n        33% { box-shadow: 0 0 10px rgba(0,255,255,0.4), 0 0 15px rgba(255,255,0,0.2); }\n        66% { box-shadow: 0 0 8px rgba(255,0,128,0.35), 0 0 12px rgba(0,255,0,0.25); }\n        100% { box-shadow: 0 0 6px rgba(255,0,255,0.3); }\n      }\n      \n      @keyframes neonPulse {\n        0%, 100% { text-shadow: 0 0 3px rgba(255,255,255,0.3), 0 0 6px rgba(255,255,255,0.2); }\n        50% { text-shadow: 0 0 6px rgba(255,255,255,0.4), 0 0 12px rgba(255,255,255,0.3), 0 0 18px rgba(255,255,255,0.1); }\n      }\n    `;const effectsCSS=effects.map((effect=>{var _a,_b,_c;return`\n      ${effect.selector} {\n        ${effect.css}\n      }\n      \n      ${effect.selector}:hover {\n        filter: ${effect.css.includes("filter:")?((_a=effect.css.match(/filter:\s*([^;!]+)/))===null||_a===void 0?void 0:_a[1])+" brightness(1.15) saturate(1.2)":"brightness(1.15) saturate(1.2)"} !important;\n        box-shadow: ${effect.css.includes("box-shadow:")?((_b=effect.css.match(/box-shadow:\s*([^;!]+)/))===null||_b===void 0?void 0:_b[1])+", 0 0 15px rgba(255,255,255,0.2)":"0 0 12px rgba(255,255,255,0.3)"} !important;\n        animation: ${effect.css.includes("animation:")?((_c=effect.css.match(/animation:\s*([^;!]+)/))===null||_c===void 0?void 0:_c[1])+", spray 1.5s ease-in-out infinite":"spray 1.5s ease-in-out infinite"} !important;\n        transition: all 0.2s ease !important;\n        transform: scale(1.01) !important;\n      }\n    `})).join("\n");return animations+"\n"+effectsCSS}extractOriginalCSS(){let css="";Array.from(document.styleSheets).forEach((sheet=>{try{Array.from(sheet.cssRules||sheet.rules).forEach((rule=>{css+=rule.cssText+"\n"}))}catch(corsError){console.log("Skipped external stylesheet:",sheet.href)}}));return css}}(function(){const graffiti=new WebsiteGraffiti;graffiti.startGraffiti()})();})();